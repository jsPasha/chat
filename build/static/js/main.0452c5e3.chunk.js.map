{"version":3,"sources":["components/UI/Input/Input.module.scss","components/Sidebar/Search/Search.module.scss","components/Sidebar/Rooms/RoomItem/RoomItem.module.scss","components/Header/Profile/Profile.module.scss","components/ChatBody/ChatBody.module.scss","hoc/Layout/Layout.module.scss","components/UI/Spinner/Spinner.module.scss","components/Sidebar/Sidebar.module.scss","components/ChatBody/Room/Room.module.scss","containers/Chat/Chat.module.scss","components/Header/Header.module.scss","components/ChatBody/Room/Message/Message.module.scss","serviceWorker.js","axios.js","store/actions/auth.js","store/actions/actionTypes.js","store/actions/chat.js","components/Modal/Modal.js","store/actions/profile.js","components/UI/Spinner/Spinner.js","components/Profile/Profile.js","containers/Auth/validate.js","components/UI/Input/Input.js","containers/Auth/Auth.js","components/Sidebar/Search/Search.js","components/Sidebar/Rooms/RoomItem/RoomItem.js","components/Sidebar/Rooms/Rooms.js","components/Sidebar/Sidebar.js","components/ChatBody/Room/Message/Message.js","components/ChatBody/Room/Room.js","components/ChatBody/MessageInput/MessageInput.js","components/ChatBody/ChatBody.js","containers/Chat/Chat.js","components/Header/Profile/Profile.js","components/Header/Header.js","hoc/Layout/Layout.js","App.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/chat.js","store/reducers/index.js","index.js","containers/Auth/Auth.module.scss","components/ChatBody/MessageInput/MessageInput.module.scss"],"names":["module","exports","InputWrap","FormGroup","Search","Autocomplete","Suggestions","Item","Active","NotRead","Menu","Profile","active","Container","Preview","Wrapper","App","Spinner","Sidebar","Room","Body","Header","IsOwner","Message","Status","Sending","NotReadBlock","Content","Owner","Time","Boolean","window","location","hostname","match","instance","axios","create","baseURL","withCredentials","defaults","initializeSuccess","payload","Object","objectSpread","type","socket","findRoom","_ref2","room","dispatch","getState","activeRoom","state","chat","_id","rooms","some","el","index","openRoom","createRoom","readMessages","_ref4","activeRoomIndex","_getState$chat$rooms$","notRead","emit","roomId","_ref5","showMessages","_state$chat","messages","_ref12","_ref13","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","get","concat","sent","data","status","abrupt","console","log","message","stop","this","_x","_x2","apply","arguments","fetchMessages","_ref14","Modal","open","handleClickOpen","_this","setState","handleClose","props","react_default","createElement","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogActions_default","Button_default","onClick","color","autoFocus","React","Component","fetchProfile","info","spinner","className","classes","CircularProgress_default","ResponsiveDialog","close","handleOpenRoom","_this$props","userId","profileInfo","_this$props2","fullScreen","fetching","DialogContent_default","react","DialogContentText_default","email","connect","profile","_ref","_ref16","_ref17","_callee3","_context3","_x5","fetchRoom","withMobileDialog","validate","values","errors","password","eqpassword","test","length","undefined","renderField","input","label","_ref$meta","meta","touched","error","custom","objectWithoutProperties","boolError","FormControl_default","InputLabel_default","Input_default","assign","FormHelperText_default","Error","name","Field","component","Auth","submit","authType","post","map","SubmissionError","initialized","logout","history","push","disconnect","replace","handleSubmit","submitting","login","onSubmit","autoComplete","Input_Input","Buttons","variant","disabled","Link","to","Switch","reduxForm","form","onSubmitSuccess","results","withRouter","auth","cb","IntegrationDownshift","suggestions","loading","fetchSuggestions","event","value","target","handleChange","item","downshift","fetchUserProfile","clearSelection","_this2","downshift_esm","onChange","itemToString","_ref3","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","inputProps","InputProps","ref","other","TextField_default","inputRef","renderInput","fullWidth","placeholder","Paper_default","square","suggestion","itemProps","isHighlighted","MenuItem_default","key","selected","renderSuggestion","roomItem","roomName","click","classNames","join","roomsLoading","content","roomType","users","filter","owner","RoomItem","sidebar","Rooms","sameUser","statusClasses","moment","createdAt","format","scrolledUp","handleScrolledToTop","roomBody","scrollTop","scrollHeight","messagesLoading","_this$props$messages","_this$props$notRead","i","same","uniqId","includes","react_perfect_scrollbar_lib_default","containerRef","onScrollUp","roomLoading","MessageInput","e","handleEnterPress","ctrlKey","preventDefault","handleSendMessage","handleCtrlEnterPress","Date","send","uniqid","InputWrapper","react_textarea_autosize_esm_browser","Input","onKeyUp","onKeyPress","Button","_ref10","_state$auth","avatar","_ref6","sendMessageStart","sendMessage","ChatBody_Room_Room","ChatBody_MessageInput_MessageInput","Chat","fetchUserRooms","failed","ChatBody","_ref15","_callee2","notReadMessages","structNotReadMessages","_context2","forEach","messageId","_x3","_x4","show","handleClick","handleClickOutside","onClickOutside","initializing","Header_Profile_Profile","layout","children","initialize","socketInitialized","initializeSocket","showPopup","BrowserRouter","Layout","components_Modal_Modal","Profile_Profile","Route","path","exact","render","containers_Chat_Chat","Redirect","containers_Auth_Auth","_ref$auth","then","catch","openSocket","on","_ref8","_ref9","_ref7","roomIndex","_getState$chat","roomIsOpen","roomIsExist","messageRoom","initialState","reducer","action","_","cloneDeep","toConsumableArray","newState","combineReducers","reduxFormReducer","composeEnhancers","compose","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","store","createStore","rootReducer","applyMiddleware","thunk","app","es","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Placeholder"],"mappings":"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","file":"static/js/main.0452c5e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputWrap\":\"Input_InputWrap__1Oh3w\",\"FormGroup\":\"Input_FormGroup__dHXan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__1UqHE\",\"Autocomplete\":\"Search_Autocomplete__3tVN_\",\"Suggestions\":\"Search_Suggestions__RZcAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"RoomItem_Item__37k_n\",\"Active\":\"RoomItem_Active__1neyn\",\"NotRead\":\"RoomItem_NotRead__13fFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Profile_Menu__2mluK\",\"Profile\":\"Profile_Profile__3agOE\",\"active\":\"Profile_active__12t4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ChatBody_Container__35hNP\",\"Preview\":\"ChatBody_Preview__2RE8A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Layout_Wrapper__ExLx6\",\"App\":\"Layout_App__2PNTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__3rQJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__3TdYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Room\":\"Room_Room__4h6i7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"Chat_Body__3gWvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__19x8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IsOwner\":\"Message_IsOwner__3zz94\",\"Body\":\"Message_Body__1owYx\",\"Message\":\"Message_Message__1VYvD\",\"Status\":\"Message_Status__MQWiX\",\"Sending\":\"Message_Sending__2F68P\",\"NotReadBlock\":\"Message_NotReadBlock__3BasI\",\"Content\":\"Message_Content__3aCXk\",\"Owner\":\"Message_Owner__2r8f2\",\"Time\":\"Message_Time__KLZNs\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\r\n\r\nvar instance = axios.create({\r\n  baseURL: \"/api\",\r\n  // baseURL: \"http://localhost:5000/api\",\r\n  withCredentials: true\r\n  // transformRequest: [data => JSON.stringify(data.data)],\r\n  // headers: {\r\n  //   Accept: \"application/json\",\r\n  //   \"Content-Type\": \"application/json\"\r\n  // }\r\n});\r\n\r\ninstance.defaults.withCredentials = true;\r\n\r\nexport default instance;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nimport axios from \"../../axios\";\r\n\r\nconst initializeStart = () => {\r\n  return {\r\n    type: actionTypes.INITIALIZE_START\r\n  };\r\n};\r\n\r\nexport const initializeSuccess = payload => {\r\n  return {\r\n    type: actionTypes.INITIALIZE_SUCCESS,\r\n    ...payload\r\n  };\r\n};\r\n\r\nconst initializeFailed = () => {\r\n  return {\r\n    type: actionTypes.INITIALIZE_FAILED\r\n  };\r\n};\r\n\r\nconst initializeError = ({ error }) => {\r\n  return {\r\n    type: actionTypes.INITIALIZE_ERROR,\r\n    error\r\n  };\r\n};\r\n\r\nconst logoutStart = () => {\r\n  return {\r\n    type: actionTypes.LOGOUT_START\r\n  };\r\n};\r\n\r\nconst logoutSuccess = () => {\r\n  return {\r\n    type: actionTypes.LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\nexport const logout = cb => {\r\n  return async dispatch => {\r\n    dispatch(logoutStart());\r\n    axios.get(\"/logout\", { withCredentials: true });\r\n    cb();\r\n    dispatch(logoutSuccess());\r\n  };\r\n};\r\n\r\nexport const initialize = () => {\r\n  return async dispatch => {\r\n    dispatch(initializeStart());\r\n\r\n    axios\r\n      .post(\"/initialize\", { withCredentials: true })\r\n      .then(res => {\r\n        if (res.data.status !== \"OK\") return dispatch(initializeFailed());\r\n        dispatch(initializeSuccess(res.data.payload));\r\n      })\r\n      .catch(error => dispatch(initializeError({ error })));\r\n  };\r\n};\r\n","export const INITIALIZE_START = \"INITIALIZE_START\";\r\nexport const INITIALIZE_FAILED = \"INITIALIZE_FAILED\";\r\nexport const INITIALIZE_SUCCESS = \"INITIALIZE_SUCCESS\";\r\nexport const INITIALIZE_ERROR = \"INITIALIZE_ERROR\";\r\n\r\nexport const SOCKET_INIT_SUCCESS = \"SOCKET_INIT_SUCCESS\";\r\n\r\nexport const LOGOUT_START = \"LOGOUT_START\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\n\r\nexport const FETCH_PROFILE_START = \"FETCH_PROFILE_START\";\r\nexport const FETCH_PROFILE_SUCCESS = \"FETCH_PROFILE_SUCCESS\";\r\nexport const FETCH_PROFILE_ERROR = \"FETCH_PROFILE_ERROR\";\r\nexport const CLOSE_PROFILE = \"CLOSE_PROFILE\";\r\n\r\nexport const FETCH_ROOMS_START = \"FETCH_ROOMS_START\";\r\nexport const FETCH_ROOMS_SUCCESS = \"FETCH_ROOMS_SUCCESS\";\r\nexport const FETCH_ROOMS_ERROR = \"FETCH_ROOMS_ERROR\";\r\n\r\nexport const FETCH_ROOM_START = \"FETCH_ROOM_START\";\r\nexport const FETCH_ROOM_SUCCESS = \"FETCH_ROOM_SUCCESS\";\r\nexport const FETCH_ROOM_ERROR = \"FETCH_ROOM_ERROR\";\r\n\r\nexport const OPEN_ROOM = \"OPEN_ROOM\";\r\nexport const CREATE_ROOM = \"CREATE_ROOM\";\r\n\r\nexport const FETCH_MESSAGES_START = \"FETCH_MESSAGES_START\";\r\nexport const FETCH_MESSAGES_SUCCESS = \"FETCH_MESSAGES_SUCCESS\";\r\nexport const FETCH_MESSAGES_ERROR = \"FETCH_MESSAGES_ERROR\";\r\nexport const SHOW_MESSAGES = \"SHOW_MESSAGES\";\r\n\r\nexport const SEND_MESSAGE_START = \"SEND_MESSAGE_START\";\r\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\r\nexport const SEND_MESSAGE_ERROR = \"SEND_MESSAGE_ERROR\";\r\n\r\nexport const PUSHED_MESSAGE = \"PUSHED_MESSAGE\";\r\n\r\nexport const READ_MESSAGES = \"READ_MESSAGES\";\r\nexport const MESSAGES_WAS_READ = \"MESSAGES_WAS_READ\";\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nlet socket = null;\r\n\r\nconst fetchRoomsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ROOMS_START\r\n  };\r\n};\r\n\r\nconst fetchRoomsSuccess = ({ rooms }) => {\r\n  return {\r\n    type: actionTypes.FETCH_ROOMS_SUCCESS,\r\n    rooms\r\n  };\r\n};\r\n\r\nconst fetchRoomStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ROOM_START\r\n  };\r\n};\r\n\r\nconst fetchRoomSuccess = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ROOM_SUCCESS\r\n  };\r\n};\r\n\r\nconst findRoom = ({ room }) => {\r\n  return (dispatch, getState) => {\r\n    let state = getState().chat;\r\n    let { _id } = room;\r\n    let activeRoom;\r\n\r\n    let roomIsExist = state.rooms.some((el, index) => {\r\n      activeRoom = index;\r\n      return el._id === _id;\r\n    });\r\n\r\n    if (roomIsExist) return dispatch(openRoom({ index: activeRoom }));\r\n\r\n    dispatch(createRoom({ room }));\r\n  };\r\n};\r\n\r\nconst openRoomAction = ({ index }) => {\r\n  return {\r\n    type: actionTypes.OPEN_ROOM,\r\n    activeRoomIndex: index\r\n  };\r\n};\r\n\r\nconst readMessages = ({ activeRoomIndex }) => {\r\n  return (dispatch, getState) => {\r\n    const { _id, notRead } = getState().chat.rooms[activeRoomIndex];\r\n    socket.emit(\"read messages\", { roomId: _id, notRead });\r\n    dispatch({\r\n      type: actionTypes.READ_MESSAGES,\r\n      activeRoomIndex\r\n    });\r\n  };\r\n};\r\n\r\nexport const openRoom = ({ index }) => {\r\n  return dispatch => {\r\n    dispatch(openRoomAction({ index }));\r\n    dispatch(showMessages());\r\n  };\r\n};\r\n\r\nconst sendMessageStart = ({ uniqId, message }) => {\r\n  return {\r\n    type: actionTypes.SEND_MESSAGE_START,\r\n    message,\r\n    uniqId\r\n  };\r\n};\r\n\r\nconst sendMessageSuccess = ({ message, uniqId }) => {\r\n  return {\r\n    type: actionTypes.SEND_MESSAGE_SUCCESS,\r\n    message,\r\n    uniqId\r\n  };\r\n};\r\n\r\n// const sendMessageError = () => {\r\n//   return {\r\n//     type: actionTypes.SEND_MESSAGE_ERROR\r\n//   };\r\n// };\r\n\r\nexport const disconnectSocket = () => {\r\n  socket && socket.disconnect();\r\n};\r\n\r\nexport const initializeSocket = () => {\r\n  return (dispatch, getState) => {\r\n    socket = openSocket(\"/\");\r\n    // socket = openSocket(\"http://localhost:5000/\");\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      dispatch({\r\n        type: actionTypes.SOCKET_INIT_SUCCESS\r\n      });\r\n    });\r\n\r\n    socket.on(\"message was read\", ({ messages }) => {\r\n      dispatch({\r\n        type: actionTypes.MESSAGES_WAS_READ,\r\n        messages\r\n      });\r\n    });\r\n\r\n    socket.on(\"message saved\", ({ uniqId, message }) => {\r\n      dispatch(sendMessageSuccess({ uniqId, message }));\r\n    });\r\n\r\n    socket.on(\"message\", message => {\r\n      let { rooms, activeRoomIndex } = getState().chat;\r\n      let roomIsOpen = false,\r\n        roomIsExist = false,\r\n        roomIndex,\r\n        messageRoom = message.room;\r\n\r\n      rooms.forEach((el, index) => {\r\n        if (el._id === messageRoom._id) {\r\n          roomIsExist = true;\r\n          roomIndex = index;\r\n        }\r\n      });\r\n\r\n      if (!roomIsExist) {\r\n        rooms !== undefined ? rooms.push(messageRoom) : (rooms = messageRoom);\r\n        roomIndex = rooms.length - 1;\r\n      }\r\n\r\n      let room = rooms[roomIndex];\r\n      let { messages } = room;\r\n\r\n      if (messages) messages.push(message);\r\n      if (!message.owner.owner)\r\n        room.notRead\r\n          ? room.notRead.push(message._id)\r\n          : (room.notRead = [message._id]);\r\n\r\n      if (roomIndex === activeRoomIndex) roomIsOpen = true;\r\n\r\n      dispatch({\r\n        type: actionTypes.PUSHED_MESSAGE,\r\n        rooms\r\n      });\r\n\r\n      if (roomIsOpen) dispatch(readMessages({ activeRoomIndex }));\r\n    });\r\n  };\r\n};\r\n\r\nexport const sendMessage = ({ uniqId, message }) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    const { activeRoomIndex } = state.chat;\r\n    const { email, avatar } = state.auth;\r\n    const roomId = state.chat.rooms[activeRoomIndex]._id;\r\n    message.owner = { email, avatar, owner: true };\r\n    dispatch(sendMessageStart({ uniqId, message }));\r\n    socket.emit(\"message\", { uniqId, message: { ...message, room: roomId } });\r\n  };\r\n};\r\n\r\nconst fetchMessagesStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_MESSAGES_START\r\n  };\r\n};\r\n\r\nconst fetchMessagesSuccess = ({ messages }) => {\r\n  return {\r\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\r\n    messages\r\n  };\r\n};\r\n\r\nconst fetchMessages = ({ roomId }) => {\r\n  return async (dispatch, getState) => {\r\n    let { activeRoomIndex } = getState().chat;\r\n    dispatch(fetchMessagesStart());\r\n    let res = await axios.get(`/messages?id=${roomId}`, {withCredentials: true});\r\n    if (res.data.status === \"ERROR\") {\r\n      return console.log(res.data.message);\r\n    }\r\n    let messages = res.data.messages;\r\n    dispatch(fetchMessagesSuccess({ messages }));\r\n    dispatch(readMessages({ activeRoomIndex }));\r\n  };\r\n};\r\n\r\nconst showMessages = () => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    const { rooms, activeRoomIndex } = state.chat;\r\n    const messages = rooms[activeRoomIndex].messages;\r\n    const roomId = rooms[activeRoomIndex]._id;\r\n    if (!messages) {\r\n      dispatch(fetchMessages({ roomId }));\r\n    } else {\r\n      dispatch(readMessages({ activeRoomIndex }));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createRoom = ({ room }) => {\r\n  return {\r\n    type: actionTypes.CREATE_ROOM,\r\n    room\r\n  };\r\n};\r\n\r\nexport const fetchRooms = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(fetchRoomsStart());\r\n\r\n    let { notReadMessages } = getState().auth;\r\n    let structNotReadMessages = {};\r\n\r\n    notReadMessages &&\r\n      notReadMessages.forEach(el => {\r\n        let room = structNotReadMessages[el.roomId];\r\n        if (room) room.push(el.messageId);\r\n        else structNotReadMessages[el.roomId] = [el.messageId];\r\n      });\r\n\r\n    let res = await axios.get(`/rooms`, {withCredentials: true});\r\n\r\n    if (res.data.status === \"ERROR\") {\r\n      return console.log(res.data.message);\r\n    }\r\n\r\n    const { rooms } = res.data;\r\n\r\n    rooms.forEach(el => {\r\n      if (el._id in structNotReadMessages)\r\n        el.notRead = structNotReadMessages[el._id];\r\n    });\r\n\r\n    dispatch(fetchRoomsSuccess({ rooms }));\r\n  };\r\n};\r\n\r\nexport const fetchRoom = ({ userId }) => {\r\n  return async dispatch => {\r\n    dispatch(fetchRoomStart());\r\n    let res = await axios.get(`/room?user=${userId}`, {withCredentials: true});\r\n    if (res.data.status === \"ERROR\") {\r\n      return console.log(res.data.message);\r\n    }\r\n    const { room } = res.data;\r\n    dispatch(fetchRoomSuccess());\r\n    dispatch(findRoom({ room }));\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nclass Modal extends React.Component {\r\n  state = {\r\n    open: true\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\r\n          \r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\n// class Modal extends React.Component {\r\n//   state = {\r\n//     show: true\r\n//   };\r\n\r\n//   closeHandler = () => {\r\n//     this.setState({ show: false });\r\n//   };\r\n\r\n//   render() {\r\n//     const { error, message } = this.props;\r\n//     const modal = this.state.show ? (\r\n//       <div className={classes.Modal}>\r\n//         <div className={classes.ModalBody}>\r\n//           {error ? <Error close={this.closeHandler} message={message} /> : null}\r\n//         </div>\r\n//       </div>\r\n//     ) : null;\r\n//     return modal;\r\n//   }\r\n// }\r\n\r\n// export default Modal;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nimport axios from \"../../axios\";\r\n\r\nexport const closeProfile = () => {\r\n  return {\r\n    type: actionTypes.CLOSE_PROFILE\r\n  };\r\n};\r\n\r\nconst fetchProfileStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_PROFILE_START\r\n  };\r\n};\r\n\r\nconst fetchProfileSuccess = ({ info }) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROFILE_SUCCESS,\r\n    info\r\n  };\r\n};\r\n\r\nconst fetchProfile = id => {\r\n  return async dispatch => {\r\n    dispatch(fetchProfileStart());\r\n    let res = await axios.get(`/user?id=${id}`);\r\n    const { info } = res.data;\r\n    dispatch(fetchProfileSuccess({ info }));\r\n  };\r\n};\r\n\r\nexport default fetchProfile;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport classes from \"./Spinner.module.scss\";\r\n\r\nconst spinner = () => {\r\n  return (\r\n    <div className={classes.Spinner}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default spinner;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\r\n\r\nimport { closeProfile } from \"../../store/actions/profile\";\r\nimport { fetchRoom } from \"../../store/actions/chat\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nclass ResponsiveDialog extends React.Component {\r\n  handleClose = () => {\r\n    const { close } = this.props;\r\n    close();\r\n  };\r\n\r\n  handleOpenRoom = () => {\r\n    const { close, openRoom } = this.props;\r\n    close();\r\n    openRoom({ userId: this.props.profileInfo.id });\r\n  };\r\n\r\n  render() {\r\n    const { fullScreen, fetching } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          fullScreen={fullScreen}\r\n          open\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogContent>\r\n            {fetching ? (\r\n              <Spinner />\r\n            ) : (\r\n              <Fragment>\r\n                <DialogContentText>\r\n                  email: {this.props.profileInfo.email}\r\n                </DialogContentText>\r\n               \r\n              </Fragment>\r\n            )}\r\n          </DialogContent>\r\n          {!fetching && (\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Close\r\n              </Button>\r\n              <Button onClick={this.handleOpenRoom} color=\"primary\" autoFocus>\r\n                Chat\r\n              </Button>\r\n            </DialogActions>\r\n          )}\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDialog.propTypes = {\r\n  fullScreen: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profileInfo: state.profile.info,\r\n    fetching: state.profile.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    close: () => dispatch(closeProfile()),\r\n    openRoom: ({ userId }) => dispatch(fetchRoom({ userId }))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withMobileDialog()(ResponsiveDialog));\r\n","const validate = values => {\r\n  const errors = {};\r\n  const { email, password, eqpassword } = values;\r\n\r\n  if (!email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = \"Required\";\r\n  } else if (password.length < 6) {\r\n    errors.password = \"Must be 6 characters or more!\";\r\n  }\r\n\r\n  if (eqpassword !== undefined && !eqpassword) {\r\n    errors.eqpassword = \"Required\";\r\n  } else if (password !== eqpassword) {\r\n    errors.eqpassword = \"Must be equal to password!\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport classes from \"./Input.module.scss\";\r\n\r\nconst renderField = ({ input, label, meta: { touched, error }, ...custom }) => {\r\n  let boolError = touched && !!error;\r\n  return (\r\n    <FormControl className={classes.FormGroup} error={boolError} aria-describedby=\"component-error-text\">\r\n      <InputLabel>{label}</InputLabel>\r\n      <Input {...input} {...custom} />\r\n      {boolError ? <FormHelperText className={classes.Error}>{error}</FormHelperText> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst input = props => {\r\n  let { name, type, label } = props;\r\n  return (\r\n    <div className={classes.InputWrap}>\r\n      <Field name={name} type={type} component={renderField} label={label} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, SubmissionError } from \"redux-form\";\r\nimport validate from \"./validate\";\r\nimport axios from \"../../axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { initializeSuccess, logout } from \"../../store/actions/auth\";\r\nimport { disconnectSocket } from \"../../store/actions/chat\";\r\n\r\nimport classes from \"./Auth.module.scss\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Input from \"../../components/UI/Input/Input\";\r\n\r\nclass Auth extends Component {\r\n  componentDidUpdate() {\r\n    let { initialized, authType, logout, history } = this.props;\r\n    if (initialized) history.push(\"/\");\r\n    if (authType === \"logout\") {\r\n      logout(() => {\r\n        disconnectSocket();\r\n        history.replace(\"/login\");\r\n      });\r\n    }\r\n  }\r\n\r\n  submit = async values => {\r\n    const { email, password } = values;\r\n    const { authType } = this.props;\r\n\r\n    let res = await axios.post(`/${authType}`, { email, password });\r\n\r\n    if (res.data.status === \"ERROR\") {\r\n      res.data.errors.map(el => {\r\n        throw new SubmissionError(el);\r\n      });\r\n    } else {\r\n      return res.data.payload;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { error, handleSubmit, submitting, authType } = this.props;\r\n\r\n    let login = authType === \"login\";\r\n\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {error && <p className={classes.Error}>{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit(this.submit)} autoComplete=\"off\">\r\n          <Input name=\"email\" type=\"email\" label=\"Email\" />\r\n          <Input name=\"password\" type=\"password\" label=\"Password\" />\r\n          {!login ? (\r\n            <Input name=\"eqpassword\" type=\"password\" label=\"Repeat password\" />\r\n          ) : null}\r\n\r\n          <div className={classes.Buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              disabled={submitting}\r\n            >\r\n              {login ? \"Log In\" : \"Sign In\"}\r\n            </Button>\r\n            {login ? (\r\n              <Link to=\"/signin\" className={classes.Switch}>\r\n                Sign In\r\n              </Link>\r\n            ) : (\r\n              <Link to=\"/login\" className={classes.Switch}>\r\n                Log In\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"auth\", // a unique identifier for this form\r\n  validate,\r\n  onSubmitSuccess: (results, dispatch) => {\r\n    dispatch(initializeSuccess(results));\r\n  }\r\n})(\r\n  withRouter(\r\n    connect(\r\n      state => {\r\n        return {\r\n          initialized: state.auth.initialized\r\n        };\r\n      },\r\n      dispatch => {\r\n        return {\r\n          logout: cb => dispatch(logout(cb))\r\n        };\r\n      }\r\n    )(Auth)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport Downshift from \"downshift\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../../axios\";\r\n\r\nimport classes from \"./Search.module.scss\";\r\n\r\nimport fetchProfile from \"../../../store/actions/profile\";\r\n\r\nfunction renderInput(inputProps) {\r\n  const { InputProps, classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={{\r\n        inputRef: ref,\r\n        ...InputProps\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex }) {\r\n  const isHighlighted = highlightedIndex === index;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.id}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nclass IntegrationDownshift extends React.Component {\r\n  state = {\r\n    suggestions: [],\r\n    loading: false\r\n  };\r\n\r\n  fetchSuggestions = async event => {\r\n    const { value } = event.target;\r\n    if (!value) return;\r\n    this.setState({ loading: true });\r\n    let res = await axios.get(`/users?q=${value}`);\r\n    let { suggestions } = res.data;\r\n    this.setState({ suggestions, loading: false });\r\n  };\r\n\r\n  handleChange = (item, downshift) => {\r\n    if (item) {\r\n      let id = item.id;\r\n      this.props.fetchUserProfile(id);\r\n    }\r\n    downshift.clearSelection();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Search}>\r\n        <Downshift\r\n          onChange={this.handleChange}\r\n          itemToString={item => (item ? item.label : \"\")}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            getItemProps,\r\n            getMenuProps,\r\n            highlightedIndex,\r\n            isOpen,\r\n            selectedItem\r\n          }) => (\r\n            <div className={classes.Autocomplete}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                InputProps: getInputProps({\r\n                  placeholder: \"Search...\",\r\n                  onChange: this.fetchSuggestions\r\n                })\r\n              })}\r\n              <div {...getMenuProps()}>\r\n                {isOpen ? (\r\n                  <Paper square className={classes.Suggestions}>\r\n                    {this.state.loading && !this.state.suggestions.length\r\n                      ? \"Loading...\"\r\n                      : this.state.suggestions.map((suggestion, index) =>\r\n                          renderSuggestion({\r\n                            suggestion,\r\n                            index,\r\n                            itemProps: getItemProps({ item: suggestion }),\r\n                            highlightedIndex,\r\n                            selectedItem\r\n                          })\r\n                        )}\r\n                  </Paper>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Downshift>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  dispatch => {\r\n    return {\r\n      fetchUserProfile: id => dispatch(fetchProfile(id))\r\n    };\r\n  }\r\n)(IntegrationDownshift);\r\n","import React from \"react\";\r\nimport classes from \"./RoomItem.module.scss\";\r\n\r\nconst roomItem = props => {\r\n  const { roomName, click, active, notRead } = props;\r\n  let classNames = [classes.Item];\r\n  if (active) classNames.push(classes.Active);\r\n  return (\r\n    <div className={classNames.join(\" \")} onClick={click}>\r\n      <p>{roomName}</p>\r\n      {notRead && notRead.length ? (\r\n        <span className={classes.NotRead}>{notRead.length}</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default roomItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nimport RoomItem from \"./RoomItem/RoomItem\";\r\n\r\nimport { openRoom } from \"../../../store/actions/chat\";\r\n\r\nconst rooms = props => {\r\n  const { loading, rooms, openRoom, activeRoomIndex } = props;\r\n\r\n  let content = rooms.map((el, index) => {\r\n    const { roomType, users, notRead } = el;\r\n\r\n    let roomName = \"\";\r\n    if (roomType === \"dialog\")\r\n      roomName = users.filter(el => !el.owner)[0].email;\r\n    return (\r\n      <RoomItem\r\n        active={activeRoomIndex === index}\r\n        key={index}\r\n        roomName={roomName}\r\n        notRead={notRead}\r\n        click={() => openRoom({ index })}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (loading) content = <Spinner />;\r\n  return <Fragment>{content}</Fragment>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.chat.roomsLoading,\r\n    rooms: state.chat.rooms,\r\n    activeRoomIndex: state.chat.activeRoomIndex\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    openRoom: ({ index }) => dispatch(openRoom({ index }))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(rooms);\r\n","import React from \"react\";\r\nimport Search from \"./Search/Search\";\r\nimport Rooms from \"./Rooms/Rooms\";\r\n\r\nimport classes from \"./Sidebar.module.scss\";\r\n\r\nconst sidebar = () => {\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      <Search />\r\n      <Rooms />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default sidebar;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Message.module.scss\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst message = props => {\r\n  let { data, sameUser, notRead } = props;\r\n  let classNames = [classes.Message];\r\n  if (data.owner.owner) classNames.push(classes.IsOwner);\r\n  if (notRead) classNames.push(classes.NotReadBlock);\r\n  let statusClasses = [classes.Status];\r\n\r\n  switch (data.status) {\r\n    case \"not-read\":\r\n      statusClasses.push(classes.NotRead);\r\n      break;\r\n    case \"sending\":\r\n      statusClasses.push(classes.Sending);\r\n      break;\r\n    default:\r\n      statusClasses = null;\r\n      break;\r\n  }\r\n\r\n  let messageBody = (\r\n    <div className={classNames.join(\" \")}>\r\n      {!sameUser && (\r\n        <div className={classes.Owner}>\r\n          <p>{data.owner.email}</p>\r\n        </div>\r\n      )}\r\n      <div className={classes.Body}>\r\n        {data.owner.owner && statusClasses ? <span className={statusClasses.join(\" \")} /> : null}\r\n\r\n        <div className={classes.Content}>{data.content}</div>\r\n        <p className={classes.Time}>\r\n          {moment(data.createdAt).format(\"HH:mm:ss\")}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return messageBody;\r\n};\r\n\r\nexport default message;\r\n","import React, { Component } from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Messages from \"./Message/Message\";\r\n\r\nimport classes from \"./Room.module.scss\";\r\n\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nclass Room extends Component {\r\n  scrolledUp = false;\r\n\r\n  componentDidUpdate() {\r\n    this.roomBody.scrollTop = this.roomBody.scrollHeight;\r\n  }\r\n\r\n  handleScrolledToTop = () => {\r\n    this.scrolledUp = true;\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      loading,\r\n      messagesLoading,\r\n      messages = [],\r\n      notRead = []\r\n    } = this.props;\r\n\r\n    messages = messages.map((el, i) => {\r\n      let same = false;\r\n      if (\r\n        i > 0 &&\r\n        (messages[i - 1].owner._id === el.owner._id ||\r\n          messages[i - 1].owner.owner === el.owner.owner)\r\n      )\r\n        same = true;\r\n      return (\r\n        <Messages\r\n          key={el._id || el.uniqId}\r\n          notRead={notRead.includes(el._id)}\r\n          sameUser={same}\r\n          data={el}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <PerfectScrollbar\r\n        containerRef={el => (this.roomBody = el)}\r\n        className={classes.Room}\r\n        onScrollUp={this.handleScrolledToTop}\r\n      >\r\n        {loading || messagesLoading ? <Spinner /> : null}\r\n        {messages}\r\n      </PerfectScrollbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.chat.roomLoading,\r\n    messagesLoading: state.chat.messagesLoading,\r\n    messages: state.chat.rooms[state.chat.activeRoomIndex].messages,\r\n    notRead: state.chat.rooms[state.chat.activeRoomIndex].notRead\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Room);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./MessageInput.module.scss\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nimport uniqid from \"uniqid\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { sendMessage } from \"../../../store/actions/chat\";\r\n\r\nclass MessageInput extends Component {\r\n  state = { message: \"\" };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.target.value });\r\n  };\r\n\r\n  handleEnterPress = e => {\r\n    if (e.key === \"Enter\" && !e.ctrlKey) {\r\n      e.preventDefault();\r\n      this.handleSendMessage();\r\n    }\r\n  };\r\n\r\n  handleCtrlEnterPress = e => {\r\n    if (e.key === \"Enter\" && e.ctrlKey) {\r\n      e.preventDefault();\r\n      this.setState(state => ({ ...state, message: state.message + \"\\n\" }));\r\n    }\r\n  };\r\n\r\n  handleSendMessage = () => {\r\n    if (!this.state.message) return;\r\n    let message = {\r\n      type: \"text\",\r\n      content: this.state.message,\r\n      createdAt: new Date(),\r\n      status: \"sending\"\r\n    };\r\n    this.props.send({ uniqId: uniqid(), message });\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        <div className={classes.InputWrapper}>\r\n          <Textarea\r\n            placeholder=\"Type here...\"\r\n            onChange={this.handleChange}\r\n            className={classes.Input}\r\n            value={this.state.message}\r\n            onKeyUp={this.handleCtrlEnterPress}\r\n            onKeyPress={this.handleEnterPress}\r\n          />\r\n          {this.state.message ? (\r\n            <button className={classes.Button} onClick={this.handleSendMessage}>\r\n              Send\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    send: ({ message, uniqId }) => dispatch(sendMessage({ message, uniqId }))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(MessageInput);\r\n","import React, { Fragment } from \"react\";\r\nimport Room from \"./Room/Room\";\r\nimport MessageInput from \"./MessageInput/MessageInput\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./ChatBody.module.scss\";\r\n\r\nconst chatBody = props => {\r\n  const { activeRoomIndex } = props;\r\n  return (\r\n    <div className={classes.Container}>\r\n      {activeRoomIndex !== undefined ? (\r\n        <Fragment>\r\n          <Room />\r\n          <MessageInput />\r\n        </Fragment>\r\n      ) : (\r\n        <p className={classes.Preview}>\r\n          Please select a chat to start messaging\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(state => {\r\n  return {\r\n    activeRoomIndex: state.chat.activeRoomIndex\r\n  };\r\n})(chatBody);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport ChatBody from \"../../components/ChatBody/ChatBody\";\r\n\r\nimport classes from \"./Chat.module.scss\";\r\n\r\nimport { fetchRooms } from \"../../store/actions/chat\";\r\n\r\nclass Chat extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUserRooms();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { failed } = this.props;\r\n    if (failed) {\r\n      this.props.history.replace(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Body}>\r\n        <Sidebar />\r\n        <ChatBody />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    failed: state.auth.failed\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUserRooms: () => dispatch(fetchRooms())\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Chat)\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./Profile.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport onClickOutside from \"react-onclickoutside\";\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    show: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  };\r\n\r\n  handleClickOutside = () => {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email } = this.props;\r\n    return (\r\n      <div className={classes.Profile}>\r\n        <p\r\n          onClick={this.handleClick}\r\n          className={this.state.show ? classes.active : null}\r\n        >\r\n          {email}\r\n        </p>\r\n        {this.state.show ? (\r\n          <ul className={classes.Menu}>\r\n            <li>\r\n              <Link to=\"/logout\">logout</Link>\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    email: state.auth.email,\r\n    avatar: state.auth.avatar,\r\n    initialized: state.auth.initialized\r\n  };\r\n})(onClickOutside(Profile));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Profile from \"./Profile/Profile\";\r\n\r\nimport classes from \"./Header.module.scss\";\r\n\r\nconst header = props => {\r\n  let { initialized } = props;\r\n  return (\r\n    <header className={classes.Header}>\r\n      <h1>Sociable</h1>\r\n      {initialized ? <Profile /> : null}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default connect(state => {\r\n  return {\r\n    initializing: state.auth.initializing,\r\n    initialized: state.auth.initialized\r\n  };\r\n})(header);\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Layout.module.scss\";\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nconst layout = props => {\r\n  return (\r\n    <div className={classes.Wrapper}>\r\n      <div className={classes.App}>\r\n        <Header />\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default layout;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { initialize } from \"./store/actions/auth\";\nimport { initializeSocket } from \"./store/actions/chat\";\n\nimport Modal from \"./components/Modal/Modal\";\n\nimport Profile from \"./components/Profile/Profile\";\n\nimport Spinner from \"./components/UI/Spinner/Spinner\";\n\nimport { Route, BrowserRouter, Switch, Redirect } from \"react-router-dom\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Chat from \"./containers/Chat/Chat\";\nimport Layout from \"./hoc/Layout/Layout\";\n\nclass App extends Component {\n  state = {\n    errors: []\n  };\n\n  componentDidMount() {\n    this.props.initialize();\n  }\n\n  componentDidUpdate() {\n    if (this.props.initialized && !this.props.socketInitialized) {\n      this.props.initializeSocket();\n    }\n  }\n\n  render() {\n    const { error, showPopup, initialized, initializing } = this.props;\n    return (\n      <BrowserRouter>\n        <Layout>\n          {error ? <Modal error message=\"Initializing error. Server.\" /> : null}\n          {showPopup ? <Profile /> : null}\n\n          {this.state.errors.map(el => (\n            <div>{el}</div>\n          ))}\n\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() =>\n                !initializing && initialized ? (\n                  <Chat />\n                ) : !initializing && !initialized ? (\n                  <Redirect to=\"/login\" />\n                ) : (\n                  <Spinner />\n                )\n              }\n            />\n            <Route path=\"/login\" render={() => <Auth authType=\"login\" />} />\n            <Route path=\"/signin\" render={() => <Auth authType=\"signin\" />} />\n            <Route path=\"/logout\" render={() => <Auth authType=\"logout\" />} />\n            <Route path=\"/\" render={() => <h1>404</h1>} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth: { email, avatar, error, initialized, initializing },\n  chat: { socketInitialized },\n  profile: { showPopup }\n}) => {\n  return {\n    initializing,\n    initialized,\n    socketInitialized,\n    email,\n    avatar,\n    error,\n    showPopup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initialize: () => dispatch(initialize()),\n    initializeSocket: () => dispatch(initializeSocket())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  avatar: \"\",\r\n  notReadMessages: [],\r\n  initializing: true,\r\n  initialized: false,\r\n  failed: false,\r\n  error: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGOUT_START:\r\n      return state;\r\n\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return {\r\n        ...initialState,\r\n        failed: true\r\n      };\r\n\r\n    case actionTypes.INITIALIZE_START:\r\n      return {\r\n        ...state,\r\n        initializing: true\r\n      };\r\n\r\n    case actionTypes.INITIALIZE_SUCCESS:\r\n   \r\n      const { email, avatar, notReadMessages } = action;\r\n      return {\r\n        ...state,\r\n        email,\r\n        avatar,\r\n        notReadMessages,\r\n        initializing: false,\r\n        initialized: true,\r\n        failed: false\r\n      };\r\n\r\n    case actionTypes.INITIALIZE_FAILED:\r\n      return {\r\n        ...state,\r\n        initialized: false,\r\n        initializing: false,\r\n        failed: true\r\n      };\r\n\r\n    case actionTypes.INITIALIZE_ERROR:\r\n      return {\r\n        ...state,\r\n        initializing: false,\r\n        initialized: false,\r\n        error: action.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  info: {\r\n    avatar: null,\r\n    email: \"\",\r\n    id: null,\r\n    room: null\r\n  },\r\n  showPopup: false,\r\n  fetching: false,\r\n  error: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { info, error } = action;\r\n  switch (action.type) {\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return initialState;\r\n      \r\n    case actionTypes.FETCH_PROFILE_START:\r\n      return {\r\n        ...state,\r\n        fetching: true,\r\n        showPopup: true\r\n      };\r\n\r\n    case actionTypes.FETCH_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        info\r\n      };\r\n\r\n    case actionTypes.FETCH_PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        error\r\n      };\r\n\r\n    case actionTypes.CLOSE_PROFILE:\r\n      return {\r\n        ...state,\r\n        showPopup: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  rooms: [],\r\n  activeRoomIndex: undefined,\r\n  roomsLoading: false,\r\n  roomLoading: false,\r\n  messagesLoading: false,\r\n  socketInitialized: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return initialState;\r\n\r\n    case actionTypes.FETCH_ROOM_START:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        roomLoading: true\r\n      };\r\n\r\n    case actionTypes.FETCH_ROOM_SUCCESS:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        roomLoading: false\r\n      };\r\n\r\n    case actionTypes.FETCH_ROOM_ERROR:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        roomLoading: false\r\n      };\r\n\r\n    case actionTypes.FETCH_ROOMS_START:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        roomsLoading: true\r\n      };\r\n\r\n    case actionTypes.FETCH_ROOMS_SUCCESS:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        roomsLoading: false,\r\n        rooms: action.rooms\r\n      };\r\n\r\n    case actionTypes.FETCH_ROOMS_ERROR:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        roomsLoading: false\r\n      };\r\n\r\n    case actionTypes.OPEN_ROOM:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        activeRoomIndex: action.activeRoomIndex\r\n      };\r\n\r\n    case actionTypes.CREATE_ROOM:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        rooms: [action.room, ...state.rooms],\r\n        activeRoomIndex: 0\r\n      };\r\n\r\n    case actionTypes.FETCH_MESSAGES_START:\r\n      return {\r\n        ..._.cloneDeep(state),\r\n        messagesLoading: true\r\n      };\r\n\r\n    case actionTypes.FETCH_MESSAGES_SUCCESS: {\r\n      let newState = _.cloneDeep(state);\r\n      newState.rooms[state.activeRoomIndex].messages = action.messages;\r\n      newState.messagesLoading = false;\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SEND_MESSAGE_START: {\r\n      let newState = _.cloneDeep(state);\r\n      let { message, uniqId } = action;\r\n      message.uniqId = uniqId;\r\n      newState.rooms[state.activeRoomIndex].messages\r\n        ? newState.rooms[state.activeRoomIndex].messages.push(message)\r\n        : (newState.rooms[state.activeRoomIndex].messages = [message]);\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SEND_MESSAGE_SUCCESS: {\r\n      let { message, uniqId } = action;\r\n      let newState = _.cloneDeep(state);\r\n\r\n      try {\r\n        newState.rooms.forEach((el, index) => {\r\n          el.messages &&\r\n            el.messages.forEach((el, i) => {\r\n              if (el.uniqId === uniqId) {\r\n                message.owner = el.owner;\r\n                newState.rooms[index].messages[i] = message;\r\n                throw new Error(\"break loop\");\r\n              }\r\n            });\r\n        });\r\n      } catch (e) {\r\n        if (e.message !== \"break loop\") throw e;\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SOCKET_INIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        socketInitialized: true\r\n      };\r\n\r\n    case actionTypes.PUSHED_MESSAGE: {\r\n      let newState = _.cloneDeep(state);\r\n      let rooms = _.cloneDeep(action.rooms);\r\n      return { ...newState, rooms: [...rooms] };\r\n    }\r\n\r\n    case actionTypes.READ_MESSAGES: {\r\n      let newState = _.cloneDeep(state);\r\n      let { activeRoomIndex } = action;\r\n      newState.rooms[activeRoomIndex].notRead = [];\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.MESSAGES_WAS_READ: {\r\n      let newState = _.cloneDeep(state);\r\n      let { messages } = action;\r\n      newState.rooms.forEach(el => {\r\n        el.messages &&\r\n          el.messages.forEach(message => {\r\n            if (messages.includes(message._id)) {\r\n              message.status = \"read\";\r\n            }\r\n          });\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport { reducer as reduxFormReducer } from \"redux-form\";\r\nimport profile from \"./profile\";\r\nimport chat from \"./chat\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  form: reduxFormReducer,\r\n  profile,\r\n  chat\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers/index\";\n\nconst composeEnhancers =\n  (process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null) || compose;\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2bc43\",\"Error\":\"Auth_Error__2PM-K\",\"Buttons\":\"Auth_Buttons__3LABR\",\"Switch\":\"Auth_Switch__3Qum1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"MessageInput_Container__2FIuU\",\"Input\":\"MessageInput_Input__1nz7Z\",\"InputWrapper\":\"MessageInput_InputWrapper__1erff\",\"Placeholder\":\"MessageInput_Placeholder__-AMGB\"};"],"sourceRoot":""}